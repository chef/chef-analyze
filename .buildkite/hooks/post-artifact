#!/bin/bash
#
# This script will only run for the jobs that upload Buildkite artifacts,
# currently the only job that does that is our code coverage job so if that
# changes we will have to customize it differently.
#
# The script expects the coverage data to already exist inside coverage/,
# with that data it will compare it with the coverage in master and fail
# if the coverage is decreased. Additionally, the script will post the
# report back to the open Pull Request as a comment, plus sharing a link
# to the HTML report uploaded as an artifact in Buildkite.
#

set -euo pipefail

# when updating these variables, update '.studiorc' as well
COVERAGE_TXT="coverage/coverage.txt"
COVERAGE_HTML="coverage/coverage.html"

# extract the repository name from the environment variable BUILDKITE_REPO
# example: "https://github.com/chef/chef-analyze.git"
REPO_NAME=$(echo $BUILDKITE_REPO | cut -d/ -f5 | cut -d. -f1)

# variables used to compare current coverage VS master
COVERAGE_MASTER=$(cat CODE_COVERAGE)
COVERAGE_PR=$(grep -w total: $COVERAGE_TXT | awk '{print $NF}' | sed -e 's/%//')

# Github API to comment back to the open pull request
COMMENTS_URL="https://api.github.com/repos/${BUILDKITE_ORGANIZATION_SLUG}/${REPO_NAME}/issues/${BUILDKITE_PULL_REQUEST}/comments"

function post_data() {
  cat <<EOF
{"body":"# :bar_chart: ${COVERAGE_PR}% Code Coverage \\n$(echo `code_coverage_table`)"}
EOF
}

function code_coverage_table() {
  if [ "$COVERAGE_MASTER" == "$COVERAGE_PR" ]; then
    echo "\\n :arrows_counterclockwise: This change neither increases nor decreases the code coverage. (**master ${COVERAGE_MASTER}%**)"
    echo "\\n ## 0% Increase! :sweat_smile:"
  elif [ "$(is_coverage_degraded)" == "true" ]; then
    echo "\\n :x: The code coverage is decreased. (**master ${COVERAGE_MASTER}%**)"
    echo "\\n ## $(coverage_decrease)% Decrease! :thinking:"
  else
    echo "\\n :white_check_mark: The code coverage is increased. (**master ${COVERAGE_MASTER}%**)"
    echo "\\n ## $(coverage_increase)% Increase! :rocket:"
  fi

  cat <<EOF
\\n
\\n :eyes: Read the <a href='$(buildkite_artifacts_url)'>uploaded HTML coverage report</a>
\\n
EOF
}

function coverage_decrease() {
  awk 'BEGIN { print '$COVERAGE_MASTER' - '$COVERAGE_PR' }'
}

function coverage_increase() {
  awk 'BEGIN { print '$COVERAGE_PR' - '$COVERAGE_MASTER' }'
}

function is_coverage_degraded() {
  awk 'BEGIN { if ('$COVERAGE_MASTER' > '$COVERAGE_PR') print "true"; else print "false" }'
}

function buildkite_artifacts_url() {
  payload=$(curl -H "Authorization: Token ${BUILDKITE_AGENT_ACCESS_TOKEN}" \
    "https://agent.buildkite.com/v3/builds/${BUILDKITE_BUILD_ID}/artifacts/search?query=${COVERAGE_HTML}")
  echo "$payload" | cut -d, -f5 | cut -d\" -f4
}

curl -H "Authorization: token $GITHUB_TOKEN" "$COMMENTS_URL" -d "$(post_data)" >/dev/null

if [ "$COVERAGE_MASTER" == "$COVERAGE_PR" ]; then
  cat << EOF | buildkite-agent annotate --style "info"
  This change neither increases nor decreases the code coverage from master. (${COVERAGE_MASTER}%)

  Read the <a href="artifact://coverage/coverage.html">uploaded HTML coverage report</a>
EOF
elif [ "$(is_coverage_degraded)" == "true" ]; then
  cat << EOF | buildkite-agent annotate --style "error"
  The code coverage will decrease from ${COVERAGE_MASTER}% to ${COVERAGE_PR}%

  Take a look at the <a href="artifact://coverage/coverage.html">uploaded HTML coverage report</a>
EOF
  # @afiune this exit code enforces the code coverage to be increased or,
  # at least, to be the same as master
  exit 7
else
  cat << EOF | buildkite-agent annotate --style "success"
  The code coverage will increase from ${COVERAGE_MASTER}% to ${COVERAGE_PR}%

  Read the <a href="artifact://coverage/coverage.html">uploaded HTML coverage report</a>
EOF
fi
